<project default="stg-deploy">
    <property name="sdk.dir" location="/usr/local/bin/appengine-java-sdk" />
    <property name="email" value="tmn.hirano@gmail.com" />
    <property name="work" value="work" />

    <import file="${sdk.dir}/config/user/ant-macros.xml" />

    <path id="project.classpath">
        <pathelement path="war/WEB-INF/classes" />
        <fileset dir="war/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${sdk.dir}/lib">
            <include name="shared/**/*.jar" />
        </fileset>
    </path>
    <target name="copyjars"
        description="Copies the App Engine JARs to the WAR.">
        <copy
            todir="war/WEB-INF/lib"
            flatten="true">
            <fileset dir="${sdk.dir}/lib/user">
                <include name="**/*.jar" />
            </fileset>
        </copy>
    </target>
    <target name="compile" depends="copyjars"
        description="Compiles Java source and copies other source files to the WAR.">
        <mkdir dir="war/WEB-INF/classes" />
        <copy todir="war/WEB-INF/classes">
            <fileset dir="src">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
        <javac
            srcdir="src"
            destdir="war/WEB-INF/classes"
            classpathref="project.classpath"
            encoding="UTF-8"
            debug="on" />
    </target>
    <target name="stg-deploy" depends="copyjars">
        <input message="Input Version." addproperty="version"></input>
        <input message="Push Resource To S3?" addproperty="pushResource" validargs="Y,N"></input>
        <antcall target="beforeDeploy"/>
        <exec executable="jake" inputstring="${version}">
            <arg value="make-static-files[${version},false,${work}]"/>
        </exec>
        <antcall target="pushResource${pushResource}"/>
        <antcall target="copySources"/>
        <antcall target="stg-copySources"/>
        <antcall target="deploy"/>
        <antcall target="afterDeploy"/>
    </target>
    <target name="prod-deploy" depends="copyjars">
        <input message="Input Version." addproperty="version"></input>
        <input message="Push Resource To S3?" addproperty="pushResource" validargs="Y,N"></input>
        <antcall target="beforeDeploy"/>
        <exec executable="jake">
            <arg value="make-partial"/>
        </exec>
        <move todir="${work}/partial">
            <fileset dir="${work}/partial-tmp"/>
        </move>
        <exec executable="jake" inputstring="${version}">
            <arg value="make-static-files[${version},true,${work}]"/>
        </exec>
<<<<<<< HEAD
        <antcall target="pushResource${pushResource}"/>
        <antcall target="copySources"/>
        <antcall target="prod-copySources"/>
        <antcall target="deploy"/>
        <antcall target="afterDeploy"/>
    </target>
    <target name="pushResourceY">
        <exec executable="jake" inputstring="${version}">
            <arg line="create-bucket[${version}]"/>
        </exec>
        <exec executable="jake" inputstring="${version}">
            <arg line="push-resource[${version}]"/>
        </exec>
    </target>
    <target name="pushResourceN"></target>
    <target name="stg-copySources">
        <copy file="conf/Constant.stg.java" tofile="src/jp/co/talentmedia/kyabatuku/util/Constant.java" overwrite="true"/>
        <copy file="conf/appengine-web.stg.xml" tofile="${work}/WEB-INF/appengine-web.xml" overwrite="true"/>
        <copy file="conf/ameba_footer.stg.html" tofile="${work}/partial/_common/ameba_footer.html" overwrite="true"/>
        <copy file="war/admin/index.production.html" tofile="${work}/admin/index.html" overwrite="true"/>
    </target>
    <target name="prod-copySources">
        <copy file="conf/Constant.release.java" tofile="src/jp/co/talentmedia/kyabatuku/util/Constant.java" overwrite="true"/>
        <copy file="conf/appengine-web.release.xml" tofile="${work}/WEB-INF/appengine-web.xml" overwrite="true"/>
        <copy file="conf/ameba_footer.release.html" tofile="${work}/partial/_common/ameba_footer.html" overwrite="true"/>
        <copy file="war/admin/index.production.html" tofile="${work}/admin/index.html" overwrite="true"/>
    </target>
    <target name="copySources">
        <copy todir="${work}/">
            <fileset dir="war/">
                <exclude name="index.html"/>
                <exclude name="index.staging.html"/>
=======
        <exec executable="jake">
            <arg value="make-partial"/>
        </exec>
        <exec executable="jake" inputstring="${version}">
            <arg line="create-bucket[${version}]"/>
        </exec>
        <copy todir="${work}/">
            <fileset dir="war/">
                <exclude name="index.html"/>
>>>>>>> 94264d7691e80ac3a3d920ab7321a655f9ef8912
                <exclude name="index.production.html"/>
                <exclude name="css/**/*.css"/>
                <exclude name="img/**/*"/>
                <exclude name="animation/**/*"/>
                <exclude name="material/**/*"/>
                <exclude name="material-org/**/*"/>
                <exclude name="component/**/*"/>
                <exclude name="js/Tenjoh.mini.js"/>
                <exclude name="js/Tenjoh.js"/>
                <exclude name="js/bootstrap.js"/>
                <exclude name="webfont/**/*"/>
                <exclude name="img"/>
                <exclude name="material"/>
                <exclude name="conponent"/>
                <exclude name="partial"/>
                <exclude name="webfont"/>
            </fileset>
        </copy>
<<<<<<< HEAD
    </target>
    <target name="beforeDeploy">
        <mkdir dir="${work}/WEB-INF/classes"/>
        <mkdir dir="${work}/partial-tmp"/>
        <copy todir="${work}/WEB-INF/lib" flatten="true">
            <fileset dir="${sdk.dir}/lib/user">
                <include name="**/*.jar" />
            </fileset>
        </copy>
        <exec executable="jake" inputstring="${version}">
            <arg value="make-manifest[${version}]"/>
        </exec>
    </target>
    <target name="deploy">
=======
        <copy file="war/index.production.html" tofile="${work}/index.html"/>
        <copy file="war/admin/index.production.html" tofile="${work}/admin/index.html"/>
        <copy file="war/js/bootstrap.production.js" tofile="${work}/js/bootstrap.js"/>
        <exec executable="jake">
            <arg value="make-partial"/>
        </exec>
        <move todir="${work}/partial">
            <fileset dir="${work}/partial-tmp"/>
        </move>
>>>>>>> 94264d7691e80ac3a3d920ab7321a655f9ef8912
        <javac
            srcdir="src"
            destdir="${work}/WEB-INF/classes"
            classpathref="project.classpath"
            encoding="UTF-8"
            debug="on" />
        <input message="Input password.(${email})" addproperty="userPassword"></input>
        <exec executable="${sdk.dir}/bin/appcfg.sh" inputstring="${userPassword}">
            <arg line="--email=${email} --passin update ${work}"/>
        </exec>
        <exec executable="${sdk.dir}/bin/appcfg.sh" inputstring="${userPassword}">
            <arg line="--email=${email} --passin backends ${work} update"/>
        </exec>
    </target>
    <target name="afterDeploy">
        <delete dir="${work}"/>
        <copy file="conf/Constant.local.java" tofile="src/jp/co/talentmedia/kyabatuku/util/Constant.java" overwrite="true"/>
    </target>
    <target name="datanucleusenhance" depends="compile"
        description="Performs JDO enhancement on compiled data classes.">
        <enhance_war war="war" />
    </target>
    <target name="runserver" depends="compile"
        description="Starts the development server.">
        <dev_appserver war="war" port="8888" address="0.0.0.0">
            <options>
                <arg value="--jvm_flag=-Xmx512m"/>
            </options>
        </dev_appserver>
    </target>
    <target name="update_index" description="Uploads the datastore index configuration to App Engine.">
        <input message="Input password.(${email})" addproperty="userPassword"></input>
        <exec executable="${sdk.dir}/bin/appcfg.sh" inputstring="${userPassword}">
            <arg line="--email=${email} --passin update_indexes war"/>
        </exec>
    </target>
    <target name="update_cron" description="Uploads the cron configuration to App Engine.">
        <input message="Input password.(${email})" addproperty="userPassword"></input>
        <exec executable="${sdk.dir}/bin/appcfg.sh" inputstring="${userPassword}">
            <arg line="--email=${email} --passin update_cron war"/>
        </exec>
    </target>
    <target name="vacuum_index" description="Vacuum indexes to App Engine.">
        <input message="Input password.(${email})" addproperty="userPassword"></input>
        <exec executable="${sdk.dir}/bin/appcfg.sh" inputstring="${userPassword}">
            <arg line="--email=${email} --passin vacuum_indexes war"/>
        </exec>
    </target>
    <target name="clean">
        <delete dir="war/WEB-INF/classes"/>
    </target>
    <target name="aws_jar">
        <path id="classpath">
            <pathelement path="${work}/classes" />
            <fileset dir="lib/aws/">
                <include name="**/*.jar" />
            </fileset>
        </path>
        <mkdir dir="${work}/classes"/>
        <javac
            srcdir="src-aws"
            destdir="${work}/classes"
            encoding="UTF-8"
            classpathref="classpath"
            debug="on"/>
        <jar basedir="${work}/classes" jarfile="lib/aws/ginelog.jar" />
        <exec executable="s3cmd">
            <arg line="put lib/aws/ginelog.jar s3://moshikyaba-ginelog/lib/ginelog.jar"/>
        </exec>
        <delete dir="${work}" />
    </target>
</project>
